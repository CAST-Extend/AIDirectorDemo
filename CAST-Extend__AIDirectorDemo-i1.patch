
diff --git a/ProductPriceUtils_Changes.md b/ProductPriceUtils_Changes.md
new file mode 100644
index 0000000..4cbb2b7
--- /dev/null
+++ b/ProductPriceUtils_Changes.md
@@ -0,0 +1,12 @@
+# ProductPriceUtils Changes
+
+## Changes Made
+
+1. **Replaced Deprecated Method Calls**
+   - Replaced calls to the deprecated method `getAdminFormatedAmount(MerchantStore store, BigDecimal amount)` with `getStoreFormatedAmountWithCurrency(store, amount)` in the `getFinalPrice` methods.
+
+2. **Made Method Static**
+   - Changed the `getStoreFormatedAmountWithCurrency` method to be a static method to allow for direct class-level access.
+
+These changes ensure that the deprecated method is no longer used and that the new method is accessible as a static utility function.
+
diff --git a/sm-core/src/main/java/com/salesmanager/core/business/utils/ProductPriceUtils.java b/sm-core/src/main/java/com/salesmanager/core/business/utils/ProductPriceUtils.java
index 63af24b..3f40ca2 100755
--- a/sm-core/src/main/java/com/salesmanager/core/business/utils/ProductPriceUtils.java
+++ b/sm-core/src/main/java/com/salesmanager/core/business/utils/ProductPriceUtils.java
@@ -170,7 +170,7 @@ public class ProductPriceUtils {
 
 		finalPrice.setStringPrice(getStringAmount(finalPrice.getFinalPrice()));
 		if (finalPrice.isDiscounted()) {
-			finalPrice.setStringDiscountedPrice(getAdminFormatedAmount(finalPrice.getDiscountedPrice()));
+			finalPrice.setStringDiscountedPrice(getStoreFormatedAmountWithCurrency(store, finalPrice.getDiscountedPrice()));
 		}
 		return finalPrice;
 
@@ -233,7 +233,7 @@ public class ProductPriceUtils {
 
 		finalPrice.setStringPrice(getStringAmount(finalPrice.getFinalPrice()));
 		if (finalPrice.isDiscounted()) {
-			finalPrice.setStringDiscountedPrice(getAdminFormatedAmount(finalPrice.getDiscountedPrice()));
+			finalPrice.setStringDiscountedPrice(getStoreFormatedAmountWithCurrency(store, finalPrice.getDiscountedPrice()));
 		}
 		return finalPrice;
 
@@ -291,7 +291,7 @@ public class ProductPriceUtils {
 	 * @throws Exception
 	 */
 	// Utility
-	public String getStoreFormatedAmountWithCurrency(MerchantStore store, BigDecimal amount) throws Exception {
+	public static String getStoreFormatedAmountWithCurrency(MerchantStore store, BigDecimal amount) throws Exception {
 		if (amount == null) {
 			return "";
 		}
