{
  "main facts about source code file [sm-core-model/src/main/java/com/salesmanager/core/model/tax/TaxConfiguration.java]": {
    "00. source files defining elements dependent on elements defined in file [sm-core-model/src/main/java/com/salesmanager/core/model/tax/TaxConfiguration.java]": [
      {
        "files": [
          {
            "from_file": "sm-core/src/main/java/com/salesmanager/core/business/services/tax/TaxServiceImpl.java",
            "calls_between_elements": [
              {
                "from_type": "Java Method",
                "to_type": "Java Method",
                "from_name": "calculateTax(com.salesmanager.core.model.order.OrderSummary,com.salesmanager.core.model.customer.Customer,com.salesmanager.core.model.merchant.MerchantStore,com.salesmanager.core.model.reference.language.Language) return java.util.List.List\u003ccom.salesmanag",
                "to_name": "isCollectTaxIfDifferentCountryOfStoreCountry() return boolean",
                "calling_type": "CALL"
              },
              {
                "from_type": "Java Method",
                "to_type": "Java Method",
                "from_name": "calculateTax(com.salesmanager.core.model.order.OrderSummary,com.salesmanager.core.model.customer.Customer,com.salesmanager.core.model.merchant.MerchantStore,com.salesmanager.core.model.reference.language.Language) return java.util.List.List\u003ccom.salesmanag",
                "to_name": "isCollectTaxIfDifferentProvinceOfStoreCountry() return boolean",
                "calling_type": "CALL"
              },
              {
                "from_type": "Java Method",
                "to_type": "Java Method",
                "from_name": "calculateTax(com.salesmanager.core.model.order.OrderSummary,com.salesmanager.core.model.customer.Customer,com.salesmanager.core.model.merchant.MerchantStore,com.salesmanager.core.model.reference.language.Language) return java.util.List.List\u003ccom.salesmanag",
                "to_name": "getTaxBasisCalculation() return com.salesmanager.core.model.tax.TaxBasisCalculation",
                "calling_type": "CALL"
              },
              {
                "from_type": "Java Method",
                "to_type": "Java Method",
                "from_name": "calculateTax(com.salesmanager.core.model.order.OrderSummary,com.salesmanager.core.model.customer.Customer,com.salesmanager.core.model.merchant.MerchantStore,com.salesmanager.core.model.reference.language.Language) return java.util.List.List\u003ccom.salesmanag",
                "to_name": "setTaxBasisCalculation(com.salesmanager.core.model.tax.TaxBasisCalculation) return void",
                "calling_type": "CALL"
              },
              {
                "from_type": "Java Method",
                "to_type": "Java Method",
                "from_name": "saveTaxConfiguration(com.salesmanager.core.model.tax.TaxConfiguration,com.salesmanager.core.model.merchant.MerchantStore) return void",
                "to_name": "toJSONString() return java.lang.String",
                "calling_type": "CALL"
              },
              {
                "from_type": "Java Method",
                "to_type": "Java Constructor",
                "from_name": "calculateTax(com.salesmanager.core.model.order.OrderSummary,com.salesmanager.core.model.customer.Customer,com.salesmanager.core.model.merchant.MerchantStore,com.salesmanager.core.model.reference.language.Language) return java.util.List.List\u003ccom.salesmanag",
                "to_name": "TaxConfiguration()",
                "calling_type": "CALL"
              },
              {
                "from_type": "Java Class",
                "to_type": "Java Class",
                "from_name": "TaxServiceImpl",
                "to_name": "TaxConfiguration",
                "calling_type": "CALL"
              }
            ],
            "comment": "",
            "nb_calls_between_elements": 7
          }
        ],
        "files_list_comment": "",
        "nb_files_with_calling_elements": 1
      }
    ]
  }
}
