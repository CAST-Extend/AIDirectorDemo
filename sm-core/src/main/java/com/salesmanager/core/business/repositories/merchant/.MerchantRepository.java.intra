{
  "main facts about source code file [sm-core/src/main/java/com/salesmanager/core/business/repositories/merchant/MerchantRepository.java]": {
    "00. dependencies between elements defined in file [sm-core/src/main/java/com/salesmanager/core/business/repositories/merchant/MerchantRepository.java]": [
      {
        "calls_between_elements": [
          {
            "from_type": "Java Method",
            "to_type": "Spring Data JPQL Query",
            "from_name": "findByCode(java.lang.String) return com.salesmanager.core.model.merchant.MerchantStore",
            "to_name": "select m from MerchantStore",
            "calling_type": "CALL"
          },
          {
            "from_type": "Java Method",
            "to_type": "Spring Data JPQL Query",
            "from_name": "getById(int) return com.salesmanager.core.model.merchant.MerchantStore",
            "to_name": "select m from MerchantStore",
            "calling_type": "CALL"
          },
          {
            "from_type": "Java Method",
            "to_type": "Spring Data Query",
            "from_name": "listByGroup(java.lang.String,java.lang.Integer) return java.util.List.List\u003ccom.salesmanager.core.model.merchant.MerchantStore\u003e",
            "to_name": "select * from MERCHANT_STORE",
            "calling_type": "CALL"
          },
          {
            "from_type": "Java Method",
            "to_type": "Spring Data JPQL Query",
            "from_name": "findAllStoreCodeNameEmail() return java.util.List.List\u003ccom.salesmanager.core.model.merchant.MerchantStore\u003e",
            "to_name": "select new com.salesmanager.core.model.merchant.MerchantStore(m.id, m.code,",
            "calling_type": "CALL"
          },
          {
            "from_type": "Java Method",
            "to_type": "Spring Data JPQL Query",
            "from_name": "findAllStoreNames(java.util.List.List\u003cjava.lang.String\u003e) return java.util.List.List\u003ccom.salesmanager.core.model.merchant.MerchantStore\u003e",
            "to_name": "select new com.salesmanager.core.model.merchant.MerchantStore(m.id, m.code,",
            "calling_type": "CALL"
          },
          {
            "from_type": "Java Method",
            "to_type": "Spring Data JPQL Query",
            "from_name": "findAllStoreNames(java.lang.String) return java.util.List.List\u003ccom.salesmanager.core.model.merchant.MerchantStore\u003e",
            "to_name": "select new com.salesmanager.core.model.merchant.MerchantStore(m.id, m.code,",
            "calling_type": "CALL"
          },
          {
            "from_type": "Java Method",
            "to_type": "Spring Data JPQL Query",
            "from_name": "findAllStoreNames() return java.util.List.List\u003ccom.salesmanager.core.model.merchant.MerchantStore\u003e",
            "to_name": "select new com.salesmanager.core.model.merchant.MerchantStore(m.id, m.code,",
            "calling_type": "CALL"
          },
          {
            "from_type": "Java Method",
            "to_type": "Spring Data JPQL Query",
            "from_name": "getByParent(java.lang.String) return java.util.List.List\u003ccom.salesmanager.core.model.merchant.MerchantStore\u003e",
            "to_name": "select distinct m from",
            "calling_type": "CALL"
          },
          {
            "from_type": "Java Method",
            "to_type": "Spring Data JPQL Query",
            "from_name": "existsByCode(java.lang.String) return boolean",
            "to_name": "SELECT COUNT(m) \u003e 0",
            "calling_type": "CALL"
          }
        ],
        "calls_between_elements_list_comment": "",
        "nb_calls_between_elements": 9
      }
    ]
  }
}
