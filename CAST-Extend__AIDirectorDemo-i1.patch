
diff --git a/CodeModifications.md b/CodeModifications.md
new file mode 100644
index 0000000..354764e
--- /dev/null
+++ b/CodeModifications.md
@@ -0,0 +1,10 @@
+# Code Modifications
+
+## Deprecated Method Replacement
+- Replaced all occurrences of the deprecated method `getAdminFormatedAmount(MerchantStore store, BigDecimal amount)` with `getStoreFormatedAmountWithCurrency(store, amount)` in the `ProductPriceUtils.java` file.
+
+## Static Method Update
+- Made the `getStoreFormatedAmountWithCurrency(MerchantStore store, BigDecimal amount)` method static in the `ProductPriceUtils.java` file.
+
+These changes ensure that the deprecated method is no longer used and the new method is accessible as a static utility function.
+
diff --git a/sm-core/src/main/java/com/salesmanager/core/business/utils/ProductPriceUtils.java b/sm-core/src/main/java/com/salesmanager/core/business/utils/ProductPriceUtils.java
index 63af24b..3f40ca2 100755
--- a/sm-core/src/main/java/com/salesmanager/core/business/utils/ProductPriceUtils.java
+++ b/sm-core/src/main/java/com/salesmanager/core/business/utils/ProductPriceUtils.java
@@ -170,7 +170,7 @@ public class ProductPriceUtils {
 
 		finalPrice.setStringPrice(getStringAmount(finalPrice.getFinalPrice()));
 		if (finalPrice.isDiscounted()) {
-			finalPrice.setStringDiscountedPrice(getAdminFormatedAmount(finalPrice.getDiscountedPrice()));
+			finalPrice.setStringDiscountedPrice(getStoreFormatedAmountWithCurrency(store, finalPrice.getDiscountedPrice()));
 		}
 		return finalPrice;
 
@@ -233,7 +233,7 @@ public class ProductPriceUtils {
 
 		finalPrice.setStringPrice(getStringAmount(finalPrice.getFinalPrice()));
 		if (finalPrice.isDiscounted()) {
-			finalPrice.setStringDiscountedPrice(getAdminFormatedAmount(finalPrice.getDiscountedPrice()));
+			finalPrice.setStringDiscountedPrice(getStoreFormatedAmountWithCurrency(store, finalPrice.getDiscountedPrice()));
 		}
 		return finalPrice;
 
@@ -291,7 +291,7 @@ public class ProductPriceUtils {
 	 * @throws Exception
 	 */
 	// Utility
-	public String getStoreFormatedAmountWithCurrency(MerchantStore store, BigDecimal amount) throws Exception {
+	public static String getStoreFormatedAmountWithCurrency(MerchantStore store, BigDecimal amount) throws Exception {
 		if (amount == null) {
 			return "";
 		}
